import tkinter as tk
from tkinter import messagebox
import random
import re  # Import regular expression module

# Function to generate a new math problem
def generate_problem():
    num1 = random.randint(1, 20)
    num2 = random.randint(1, 20)
    return f"{num1} + {num2}", num1 + num2

# Function to check the answer
def check_answer():
    global timer_id, time_remaining, points
    if timer_id:
        game_frame.after_cancel(timer_id)  # Stop the current timer
    
    user_answer = entry.get()
    try:
        user_answer = int(user_answer)
    except ValueError:
        messagebox.showerror("Error", "Please enter a valid number")
        return
    
    if user_answer == correct_answer:
        messagebox.showinfo("Correct", "Great job!")
        points += 10  # Award 10 points for a correct answer
        display_score()  # Update the score display
    else:
        messagebox.showerror("Incorrect", f"Wrong answer. The correct answer is {correct_answer}")
    
    new_problem()  # Generate a new problem after checking answer

# Function to display a new problem
def new_problem():
    global problem_text, correct_answer, timer_id, time_remaining
    problem_text, correct_answer = generate_problem()
    problem_label.config(text=problem_text)
    entry.delete(0, tk.END)  # Clear the entry widget
    
    # Start the timer for the new problem
    time_remaining = 10
    timer_id = game_frame.after(1000, update_timer)

# Function to update the timer
def update_timer():
    global timer_id, time_remaining
    time_remaining -= 1
    timer_label.config(text=f"Time left: {time_remaining} seconds")
    if time_remaining > 0:
        timer_id = game_frame.after(1000, update_timer)
    else:
        messagebox.showinfo("Time's up!", "Out of time!")
        new_problem()  # Move to the next problem automatically

# Function to start the game
def start_game():
    global timer_id, time_remaining, points
    player_name = name_entry.get().strip()  # Get player's name and remove extra spaces
    if not player_name:
        messagebox.showerror("Error", "Please enter your name.")
        return
    
    # Validate that the name contains only letters
    if not re.match(r"^[a-zA-Z]+$", player_name):
        messagebox.showerror("Error", "Please enter only letters for your name.")
        return
    
    # Initialize the game variables
    points = 0
    display_score()  # Display the initial score
    
    # Hide the welcome frame and show the game frame
    welcome_frame.pack_forget()
    game_frame.pack()
    
    # Start the first problem
    new_problem()

# Function to display the current score
def display_score():
    score_label.config(text=f"Score: {points}")

# Create the main window
root = tk.Tk()
root.title("Number Ninjas by Flow Computing")

# Set background color
root.configure(bg="#f6bfdd")

# Welcome frame
welcome_frame = tk.Frame(root, padx=50, pady=30, bg="#f6bfdd")
welcome_frame.pack()

welcome_label = tk.Label(welcome_frame, text="Welcome to Number Ninjas!", font=("Helvetica", 30), bg="#f6bfdd", fg="#fffafa") # Welcome to game
welcome_label.pack(pady=20)

name_label = tk.Label(welcome_frame, text="What's your name?", font=("Helvetica", 22), bg="#f6bfdd", fg="#fffafa") # Ask for name
name_label.pack()

name_entry = tk.Entry(welcome_frame, font=("Helvetica", 18))
name_entry.pack(pady=10)

start_button = tk.Button(welcome_frame, text="Start Game", font=("Helvetica", 18), highlightbackground='#3E4149', command=start_game) # Start game
start_button.pack()

# Game frame
game_frame = tk.Frame(root, padx=50, pady=30, bg="#f6bfdd")

problem_label = tk.Label(game_frame, text="", font=("Helvetica", 24), bg="#f6bfdd")
problem_label.pack(pady=20)

entry = tk.Entry(game_frame, font=("Helvetica", 24), width=5)
entry.pack(pady=10)

check_button = tk.Button(game_frame, text="Check", font=("Helvetica", 18),highlightbackground='#3E4149', command=check_answer)
check_button.pack()

timer_label = tk.Label(game_frame, text="Time left: 10 seconds", font=("Helvetica", 18), bg="#f6bfdd")
timer_label.pack()

score_label = tk.Label(game_frame, text="Score: 0", font=("Helvetica", 18), bg="#f6bfdd")
score_label.pack()

# Hide the game frame at first
game_frame.pack_forget()

# Run the main loop
root.mainloop()